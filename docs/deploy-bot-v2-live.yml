name: Deploy New Bot v2 - Live
on:
  workflow_dispatch:
env:
    REPO_NAME: ${{ github.event.repository.name }}
    LIVE_NAME: ${{ github.event.repository.name }}-live
    REPO_OWNER: ${{ github.repository_owner }}
jobs:
  clone:
    name: Clone Repo to server
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repo
      uses: appleboy/ssh-action@dce9d565de8d876c11d93fa4fe677c0285a66d78
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.ROOT_USERNAME }}
        password: ${{ secrets.ROOT_PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd /root/
          git clone git@github.com:${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}.git ${{ env.LIVE_NAME }}
          pwd
          
  install-requirements:
    needs: clone
    runs-on: ubuntu-latest
    steps:
    - name: installing requirements for ${{ env.LIVE_NAME }} bot
      uses: appleboy/ssh-action@dce9d565de8d876c11d93fa4fe677c0285a66d78
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.ROOT_USERNAME }}
        password: ${{ secrets.ROOT_PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd /root/${{ env.LIVE_NAME }}/
          sudo apt-get install git -y
          sudo apt-get install python3-pip -y
          pip install -r requirements.txt
  add-bot-token:
    needs: clone
    runs-on: ubuntu-latest
    steps:
    - name: adding bot token for ${{ env.LIVE_NAME }} bot
      uses: appleboy/ssh-action@dce9d565de8d876c11d93fa4fe677c0285a66d78
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.ROOT_USERNAME }}
        password: ${{ secrets.ROOT_PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          cd ${{ env.LIVE_NAME }}
          touch .env
          echo ${{ secrets.BOT_TOKEN }} > .env
          cat .env
          echo $?
  create-systemctl-service:
    needs: [clone,add-bot-token,install-requirements]
    runs-on: ubuntu-latest
    steps:
    - name: creating systemd service for ${{ env.LIVE_NAME }} bot
      uses: appleboy/ssh-action@dce9d565de8d876c11d93fa4fe677c0285a66d78
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.ROOT_USERNAME }}
        password: ${{ secrets.ROOT_PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          echo "[Unit]
          Description=${{ env.LIVE_NAME }} Discord Bot
          After=multi-user.target
          [Service]
          Type=simple
          ExecStart=/usr/bin/python3 /root/${{ env.LIVE_NAME }}/main.py
          User=root
          Restart=on-failure
          RestartSec=30
          WorkingDirectory=/root/${{ env.LIVE_NAME }}/
          Restart=on-failure
          [Install]
          WantedBy=multi-user.target" >> /etc/systemd/system/${{ env.LIVE_NAME }}.service
          sudo chmod +x /root/${{ env.LIVE_NAME }}/main.py
          sudo systemctl enable ${{ env.LIVE_NAME }}.service
          sudo systemctl daemon-reload
          sudo systemctl start ${{ env.LIVE_NAME }}.service
  
  create-systemctl-restart:
    needs: [clone,add-bot-token,install-requirements,create-systemctl-service]
    runs-on: ubuntu-latest
    steps:
    - name: creating systemd restart service for ${{ env.LIVE_NAME }} bot
      uses: appleboy/ssh-action@dce9d565de8d876c11d93fa4fe677c0285a66d78
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.ROOT_USERNAME }}
        password: ${{ secrets.ROOT_PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
            echo "[Unit]
            Description=${{ env.LIVE_NAME }} Discord Bot restart
            After=multi-user.target
            [Service]
            Type=oneshot
            ExecStart=/usr/bin/systemctl restart ${{ env.LIVE_NAME }}.service
            [Install]
            WantedBy=multi-user.target" >> /etc/systemd/system/${{ env.LIVE_NAME }}-watcher.service
            sudo systemctl enable ${{ env.LIVE_NAME }}-watcher.service
            sudo systemctl start ${{ env.LIVE_NAME }}-watcher.service
